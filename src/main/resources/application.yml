# ===============================================================================
# CRIPTOGRAFIA MICROSERVICE - SECURITY-FIRST CONFIGURATION
# ===============================================================================
# Microserviço especializado em criptografia e gestão de chaves
# Foco em segurança máxima e proteção de dados sensíveis
# ===============================================================================

spring:
  jackson:
    time-zone: America/Sao_Paulo
    locale: pt_BR
  application:
    name: criptografia
    
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Configtree secret management
  config:
    import:
      - optional:configtree:/etc/secrets/azure/
      - optional:configtree:/mnt/secrets/
      - optional:file:./secrets.properties
      
  # Database configuration (encrypted data storage)
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_crypto
    username: ${DB_USERNAME:crypto_user}
    password: ${DB_PASSWORD:}  # No default password for security
    pool:
      initial-size: ${DB_POOL_INITIAL:5}
      max-size: ${DB_POOL_MAX:20}
      max-idle-time: ${DB_POOL_IDLE_TIME:30m}
      max-acquire-time: ${DB_POOL_ACQUIRE_TIME:10s}
      
  # Flyway for migrations
  flyway:
    enabled: true
    url: jdbc:mysql://localhost:3306/conexao_sorte_crypto
    user: ${DB_USERNAME:crypto_user}
    password: ${DB_PASSWORD:}  # No default password for security
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
    
  # Security JWT for token validation
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}
          issuer-uri: ${JWT_ISSUER:https://auth.conexaodesorte.com}
          audiences: ${JWT_AUDIENCE:conexao-de-sorte}

# Server configuration
server:
  port: ${SERVER_PORT:8086}
  shutdown: graceful
  servlet:
    context-path: /api/v1/crypto
  
  # SSL/TLS Configuration (mandatory for crypto service)
  ssl:
    enabled: ${SSL_ENABLED:true}
    key-store: ${SSL_KEYSTORE_PATH:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: PKCS12
  
  # Security error handling
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Cryptography specific configuration
crypto:
  # Master key management
  master-key: ${CRYPTO_MASTER_KEY:}  # Must be provided via secrets
  
  # Supported algorithms
  algorithms:
    symmetric: ${CRYPTO_SYMMETRIC_ALGORITHM:AES-256-GCM}
    asymmetric: ${CRYPTO_ASYMMETRIC_ALGORITHM:RSA-4096}
    hash: ${CRYPTO_HASH_ALGORITHM:SHA-256}
    
  # Key rotation
  key-rotation:
    enabled: ${CRYPTO_KEY_ROTATION_ENABLED:true}
    schedule: ${CRYPTO_KEY_ROTATION_SCHEDULE:0 2 * * 0}  # Weekly on Sunday 2 AM
    retention-days: ${CRYPTO_KEY_RETENTION_DAYS:90}
    
  # Hardware Security Module (HSM) integration
  hsm:
    enabled: ${CRYPTO_HSM_ENABLED:false}
    provider: ${CRYPTO_HSM_PROVIDER:}
    library-path: ${CRYPTO_HSM_LIBRARY_PATH:}
    slot: ${CRYPTO_HSM_SLOT:0}
    pin: ${CRYPTO_HSM_PIN:}

# Security headers (extra strict for crypto service)
security:
  headers:
    content-security-policy: "default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; connect-src 'self'; frame-ancestors 'none'; base-uri 'none'; form-action 'none'"
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: "1; mode=block"
    strict-transport-security: "max-age=63072000; includeSubDomains; preload"  # 2 years
    referrer-policy: "no-referrer"
    cache-control: "no-store, no-cache, must-revalidate, max-age=0"

# CORS Configuration (very restrictive)
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://api.conexaodesorte.com}
  allowed-methods: ${CORS_ALLOWED_METHODS:POST}  # Only POST for crypto operations
  allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:false}  # No credentials for crypto service
  max-age: ${CORS_MAX_AGE:0}  # No caching

# Rate Limiting (very strict)
rate-limit:
  enabled: ${RATE_LIMIT_ENABLED:true}
  default-requests-per-minute: ${RATE_LIMIT_DEFAULT:10}  # Very low limit
  endpoints:
    "/api/v1/crypto/encrypt":
      requests-per-minute: ${RATE_LIMIT_ENCRYPT:5}
      burst-capacity: ${RATE_LIMIT_ENCRYPT_BURST:10}
    "/api/v1/crypto/decrypt":
      requests-per-minute: ${RATE_LIMIT_DECRYPT:5}
      burst-capacity: ${RATE_LIMIT_DECRYPT_BURST:10}
    "/api/v1/crypto/keys":
      requests-per-minute: ${RATE_LIMIT_KEYS:2}
      burst-capacity: ${RATE_LIMIT_KEYS_BURST:3}

# Actuator configuration (minimal exposure)
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info}  # Minimal endpoints
      base-path: /actuator
        
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:never}  # Never show details
      show-components: ${ACTUATOR_HEALTH_COMPONENTS:never}
      probes:
        enabled: true
        
  # Disable all sensitive endpoints
  info:
    env:
      enabled: false

# Logging configuration (minimal for security)
logging:
  level:
    root: ${LOG_LEVEL:WARN}
    br.tec.facilitaservicos.criptografia: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-}] %logger{36} [CRYPTO] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-}] %logger{36} [CRYPTO] - %msg%n"
    
  file:
    name: ${LOG_FILE:/app/logs/criptografia.log}
    max-size: ${LOG_FILE_MAX_SIZE:50MB}
    max-history: ${LOG_FILE_MAX_HISTORY:30}

# OpenAPI Documentation (disabled by default)
springdoc:
  api-docs:
    enabled: ${SPRINGDOC_ENABLED:false}
  swagger-ui:
    enabled: ${SWAGGER_UI_ENABLED:false}

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
      
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_crypto_dev
    
  flyway:
    url: jdbc:mysql://localhost:3306/conexao_sorte_crypto_dev
    
server:
  ssl:
    enabled: false  # Disable SSL in development
    
logging:
  level:
    br.tec.facilitaservicos.criptografia: DEBUG

---
# Test Profile  
spring:
  config:
    activate:
      on-profile: test
      
  r2dbc:
    url: r2dbc:h2:mem:crypto_test;MODE=MySQL;DB_CLOSE_DELAY=-1
    username: sa
    password: ""
    
  flyway:
    enabled: false
    
server:
  ssl:
    enabled: false
    
logging:
  level:
    root: WARN
    br.tec.facilitaservicos.criptografia: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  r2dbc:
    url: r2dbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_crypto}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    
  flyway:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_crypto}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    
server:
  port: 8086
  ssl:
    enabled: true
    
crypto:
  hsm:
    enabled: true  # Enable HSM in production
    
management:
  endpoint:
    health:
      show-details: never
      
logging:
  level:
    root: WARN
    br.tec.facilitaservicos.criptografia: INFO
    
  file:
    name: /var/log/criptografia/application.log
    
rate-limit:
  default-requests-per-minute: 5  # Even more restrictive in production
